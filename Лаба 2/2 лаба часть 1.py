= БАЗА ДАННЫХ BOOKS_DATABASE [
    {
        "идентификатор": 1,
        "имя": "test_name_1",
        "страниц": 200,
    },
    {
        "идентификатор": 2,
        "имя": "test_name_2",
        "страниц": 400,
    }
]


Забронировать класс:
    __init__ def(self, id_: int, name: str, pages: int):
        """
 Создание и подготовка к работе объекта Книга
 :param id_: Идентификатор книги
 :param name: Название книги
 :param pages: Количество страниц в книге
        """
        self.id = id_
        self.name = имя
        self.страницы = страницы
    __str__ def(self) -> str:
        """
 Функция, которая возвращает строку с названием книги
 :return: Книга "название_книги"
        """
        return f'Книга "{self.name}"'
    __repr__ def(self) -> str:
        """
 Функция, которая возвращает допустимую строку Python, по которой можно инициализировать точно такой же экземпляр
 :возвращает: книгу (id_=1, название = 'test_name_1', страниц = 200)
        """
        return f'Книга (идентификатор={self.идентификатор!r}, название={self.название!r}, страницы={self.страницы!r})'


'__main__' == __name__ if:
    # инициализируем список книг
    = список книг [
        Книга(id_=book_dict["id"], название=book_dict["название"], страницы=book_dict["страницы"]) для book_dict в BOOKS_DATABASE
    ]
    список книг в книге для:
        print(book) # проверяем метод __str__

    print(list_books) # проверяем метод __repr__